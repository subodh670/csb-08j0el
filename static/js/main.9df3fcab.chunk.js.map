{"version":3,"sources":["firebase-Config.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","App","useState","name","setName","price","setPrice","setData","showData","setShowData","total","collectionsRef","collection","addData","addDoc","Number","useEffect","fetchDb","getDocs","data","docs","map","doc","id","deleteItem","spItem","deleteDoc","className","onSubmit","e","preventDefault","Date","getTime","toString","window","alert","htmlFor","type","onChange","target","value","d","onClick","createRoot","document","getElementById","render"],"mappings":"qNAmBMA,EAAMC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMJC,GADKC,YAAaV,GACbW,YAAaX,I,QCkEhBY,EAnFH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,IAAjC,mBAAaK,GAAb,WACA,EAAgCL,mBAAS,IAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACIC,EAAQ,EACNC,EAAiBC,YAAWd,EAAI,QAChCe,EAAO,iDAAG,wGACRC,YAAOH,EAAgB,CAACR,KAAMA,EAAME,MAAOU,OAAOV,KAD1C,OAEdD,EAAQ,IACRE,EAAS,IAHK,2CAAH,qDAsBXU,qBAAU,WACR,IAAMC,EAAO,iDAAG,8GACMC,YAAQP,GADd,OACRQ,EADQ,OAEdV,EAAYU,EAAKC,KAAKC,KAAI,SAACC,GACzB,OAAO,2BAAIA,EAAIH,QAAf,IAAuBI,GAAID,EAAIC,SAHnB,2CAAH,qDAMbN,OAEF,IAAMO,EAAU,iDAAG,WAAMD,GAAN,wFACXE,EAASH,YAAIxB,EAAG,OAAQyB,GADb,SAEfG,YAAUD,GAFK,2CAAH,sDAIlB,OACE,sBAAKE,UAAU,MAAf,UACE,kDACA,uBAAMC,SAjCW,SAACC,GAEpB,OADAA,EAAEC,iBACC3B,GAAQE,GACTE,EAAQ,CAACJ,OAAME,QAAOkB,IAAI,IAAIQ,MAAOC,UAAUC,aAC/CpB,IACAT,EAAQ,SACRE,EAAS,SAKf4B,OAAOC,MAAM,gBAsBP,UACE,gCACE,uBAAOC,QAAQ,OAAf,mBAGF,uBAAOC,KAAK,OAAOd,GAAG,OAAOpB,KAAK,OAAOmC,SAAU,SAACT,GAAD,OAAKzB,EAAQyB,EAAEU,OAAOC,aAEzE,gCACE,uBAAOJ,QAAQ,QAAf,oBAGF,uBAAOC,KAAK,SAASd,GAAG,QAAQpB,KAAK,QAAQmC,SAAU,SAACT,GAAD,OAAKvB,EAASuB,EAAEU,OAAOC,aAE9E,8BACA,8CAIF,8BAIIhC,EAASa,KAAI,SAACoB,GAEd,OADE/B,GAAS+B,EAAEpC,MAGX,sBAAKsB,UAAU,QAAf,UACE,6BAAKc,EAAEtC,OACP,6BAAKsC,EAAEpC,QACP,wBAAQqC,QAAS,WAAKlB,EAAWiB,EAAElB,KAAnC,2BAH0BkB,EAAElB,SAQlC,yCAAYb,SC/EPiC,qBAAWC,SAASC,eAAe,SAC3CC,OACD,cAAC,EAAD,O","file":"static/js/main.9df3fcab.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport {getFirestore} from \"@firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA1TeROmu-e7V7Peqor7UUsGiyhtLa6lAk\",\r\n  authDomain: \"fir-codesandbox.firebaseapp.com\",\r\n  projectId: \"fir-codesandbox\",\r\n  storageBucket: \"fir-codesandbox.appspot.com\",\r\n  messagingSenderId: \"972464738979\",\r\n  appId: \"1:972464738979:web:a3239f2a520249c0566516\",\r\n  measurementId: \"G-S4DX593TDK\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nexport const db = getFirestore(app);\r\n","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {doc, getDocs, collection, updateDoc, addDoc, deleteDoc} from \"firebase/firestore\";\r\nimport {db} from './firebase-Config';\r\nconst App = () =>{\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [data, setData] = useState([]);\r\n  const [showData, setShowData] = useState([]);\r\n  let total = 0;\r\n  const collectionsRef = collection(db, \"todo\");\r\n  const addData = async()=>{\r\n    await addDoc(collectionsRef, {name: name, price: Number(price)});\r\n    setName(\"\");\r\n    setPrice(\"\");\r\n  }\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    if(name && price){\r\n      setData({name, price, id: new Date().getTime().toString()});\r\n      addData();\r\n      setName(\"\");\r\n      setPrice(0);\r\n      return;\r\n      \r\n    }\r\n    else{\r\nwindow.alert(\"Empty field\");\r\nreturn;\r\n    }\r\n  }\r\n  \r\n  \r\n    useEffect(()=>{\r\n      const fetchDb = async() =>{\r\n        const data =  await getDocs(collectionsRef);\r\n        setShowData(data.docs.map((doc)=>{\r\n          return {...doc.data(), id: doc.id};\r\n        }))\r\n       }\r\n      fetchDb();\r\n    })\r\n    const deleteItem = async(id)=>{\r\n      const spItem = doc(db,\"todo\", id);\r\n  await deleteDoc(spItem);\r\n    }\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>To-do list Items</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">\r\n            Name:                   \r\n          </label>\r\n        <input type=\"name\" id=\"name\" name=\"name\" onChange={(e)=>setName(e.target.value)}/>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"price\">\r\n            Price:\r\n          </label>\r\n        <input type=\"number\" id=\"price\" name=\"price\" onChange={(e)=>setPrice(e.target.value)}/>\r\n        </div>\r\n        <div>\r\n        <button>Add</button>\r\n        </div>\r\n       \r\n      </form>\r\n      <div>\r\n      \r\n        {\r\n          \r\n          showData.map((d)=>{\r\n            total += d.price;\r\n          return(\r\n            \r\n            <div className=\"items\" key={d.id}>\r\n              <h1>{d.name}</h1>\r\n              <h2>{d.price}</h2>\r\n              <button onClick={()=>{deleteItem(d.id)}}>Delete Item</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n        <h1>Total: {total}</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","import React from \"react\"\r\nimport \"./styles.css\";\r\nimport {createRoot} from \"react-dom/client\";\r\nimport App from \"./App\";\r\nconst root = createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n    <App/>\r\n);"],"sourceRoot":""}